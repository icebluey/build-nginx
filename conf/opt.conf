user nginx;
worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

events {
    use epoll;
    worker_connections 65535;
    multi_accept on;
    accept_mutex off;
}

http {
    # 基础优化
    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    tcp_nodelay on;

    # HTTP/2 优化
    http2_max_concurrent_streams 1024;
    http2_idle_timeout 5m;
    http2_chunk_size 16k;
    http2_body_preread_size 16k;

    # 文件缓存优化
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;

    # 连接超时设置
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 30;
    keepalive_requests 100000;
    reset_timedout_connection on;
    send_timeout 10;

    # 缓冲区优化
    client_body_buffer_size 128k;
    client_header_buffer_size 32k;
    client_max_body_size 100m;
    large_client_header_buffers 4 32k;

    # AIO 和 DirectIO 优化
    aio threads;
    aio_write on;
    directio 4k;
    directio_alignment 512;

    # 散列表优化
    types_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    variables_hash_max_size 2048;

    # 压缩优化
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 32k;
    gzip_http_version 1.1;
    gzip_comp_level 1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    gzip_vary on;
    gzip_proxied any;
    gzip_disable "MSIE [1-6]\.";

    brotli on;
    brotli_comp_level 6;
    brotli_buffers 16 8k;
    brotli_min_length 20;
    brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

    # 日志优化
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$http3"';
    access_log  /var/log/nginx/access.log  main;

    server {
        listen 443 quic reuseport;
        listen [::]:443 quic reuseport;
        http3 on;
        quic_retry on;
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name example.com www.example.com;

        # SSL 配置
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ecdh_curve X25519:secp384r1:secp521r1;
        ssl_dhparam /root/.ssl/dhparam.pem;
        ssl_certificate /root/.ssl/cert.crt;
        ssl_certificate_key /root/.ssl/privkey.pem;
        ssl_conf_command Options KTLS;
        resolver 127.0.0.1;
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 100800s;
        ssl_session_tickets off;
        ssl_early_data on;

        # 安全头
        add_header Cache-Control "private, max-age=0" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Alt-Svc 'h3=":443"; ma=86400';

        # 静态文件缓存
        location ~* \.(jpg|jpeg|png|gif|ico|webp|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
            aio threads;
            directio 4k;
            sendfile on;
            try_files $uri =404;
            access_log off;
        }

        # 主路径配置
        location / {
            add_header X-protocol $server_protocol always;
            add_header Permissions-Policy interest-cohort=();
            aio threads;
            directio 4k;
            index index.html index.htm index.php;
            try_files $uri $uri/ =404;
            access_log off;
            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
        }

        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
